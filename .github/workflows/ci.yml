name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing
          MYSQL_USER: github
          MYSQL_PASSWORD: github
          MYSQL_ROOT_HOST: '%'
        ports:
          - 3306:3306                # <--- expÃµe porta do container no localhost do runner
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, bcmath, pdo, pdo_mysql
          coverage: none

      - name: Install mysql client (needed for checks)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y default-mysql-client

      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Prepare environment file
        run: cp .env.ci .env

      - name: Generate application key & clear config
        run: |
          php artisan key:generate --ansi
          php artisan config:clear

      - name: Create storage folders
        run: |
          mkdir -p storage/framework/cache storage/framework/sessions storage/framework/views storage/logs
          chmod -R 0777 storage || true

      - name: Wait for mysql container to appear and fix auth plugin inside container (if needed)
        run: |
          # Espera o container existir
          MAX_WAIT=60
          i=0
          cid=""
          while [ $i -lt $MAX_WAIT ]; do
            cid=$(docker ps -q --filter ancestor=mysql:8.0 | head -n1 || true)
            if [ -n "$cid" ]; then
              echo "Found mysql container: $cid"
              # Espera o servidor interno do container ficar pronto e altera plugin do user para mysql_native_password
              docker exec "$cid" bash -lc "until mysqladmin ping -uroot -proot --silent; do sleep 1; done; \
                mysql -uroot -proot -e \"ALTER USER 'github'@'%' IDENTIFIED WITH mysql_native_password BY 'github'; FLUSH PRIVILEGES;\" || true"
              echo "Auth plugin altered (if applicable)."
              break
            fi
            i=$((i+1))
            echo "Waiting for mysql container to show up... ($i/$MAX_WAIT)"
            sleep 1
          done

          if [ -z \"$cid\" ]; then
            echo "MYSQL container not found after $MAX_WAIT seconds."
            docker ps -a
            exit 1
          fi

      - name: Wait for MySQL to accept connections on localhost:3306
        run: |
          MAX_RETRIES=30
          SLEEP_SECONDS=2
          i=0
          echo "Testing connection from runner to mysql at 127.0.0.1:3306 as github/github..."
          until mysql -h 127.0.0.1 -P 3306 -u github -pgithub -e "SELECT 1" >/dev/null 2>&1; do
            i=$((i+1))
            echo "Waiting for MySQL... attempt $i/$MAX_RETRIES"
            if [ $i -ge $MAX_RETRIES ]; then
              echo "MySQL didn't become ready in time. Gathering debug info..."
              echo "---- docker ps (mysql containers) ----"
              docker ps --filter ancestor=mysql:8.0 --format "ID={{.ID}} NAME={{.Names}} IMAGE={{.Image}}"
              container_id=$(docker ps -q --filter ancestor=mysql:8.0 | head -n1)
              if [ -n "$container_id" ]; then
                echo "== mysql container id: $container_id =="
                echo "---- docker logs (last 300 lines) ----"
                docker logs --tail 300 "$container_id" || true
                echo "---- mysql users (user,host,plugin) ----"
                docker exec "$container_id" bash -c "mysql -uroot -proot -e \"SELECT user,host,plugin FROM mysql.user;\" " || true
                echo "---- trying simple connection inside container as github ----"
                docker exec "$container_id" bash -c "mysql -h localhost -ugithub -pgithub -e 'SELECT 1;'" || true
              else
                echo "No mysql container found by docker ps"
              fi
              echo "---- End debug ----"
              exit 1
            fi
            sleep $SLEEP_SECONDS
          done
          echo "MySQL is up and accepting connections on 127.0.0.1:3306!"

      - name: Run migrations
        run: php artisan migrate --force --no-interaction

      - name: Run tests
        run: php artisan test --verbose
